<BehaviorTree>
	<Variables>
		<Variable name="HasTarget"/>
		<Variable name="MedicCalle"/>
		<Variable name="HostageFound" default="false"/>
		<!-- these variables are not used in this BT, but need to be present to prevent a warning caused by BasicAI:OnReset() -->
		<Variable name="ExecuteSequence" />
		<Variable name="ExecuteInterruptibleSequence"/>
    <Variable name="LocationsInitialized" default="false"/>
    <Variable name="AllHostagesRescued" default="false"/>
	</Variables>

	<SignalVariables>
    <Signal name="OnHostageInit" variable="LocationsInitialized" value="true"/>
		<Signal name="OnFriendSeen" variable="HasTarget" value="false"/>
		<Signal name="OnFindingHostage" variable="HasTarget" value="true"/>
		<Signal name="OnFindingMedic" variable="HasTarget" value="true"/>
		<Signal name="GoToGameOver" variable="HasTarget" value="false"/>
		<Signal name="OnAllHostagesRescued" variable="AllHostagesRescued" value="true"/>
		<Signal name="OnNoTarget" variable="HasTarget" value="false"/>
		<Signal name="OnLostSightOfTarget" variable="HasTarget" value="false" />
		<Signal name="OnEnemySeen" variable="HasTarget" value="true" />
		<Signal name="OnHostileSeen" variable="HasTarget" value="true" />
	</SignalVariables>
	<Timestamps>
    <Timestamp name="EnteredCombat" setOnEvent="EnteredCombat"/>
	</Timestamps>
	<Root>
		<StateMachine>

			<!--
			=================================================
					Idle
			=================================================
			-->
			<State name="Idle">
				<Transitions>
					<Transition to="GoToMedic" onEvent="OnFindingMedic"/>
					<!-- <Transition to="GoToHostage" onEvent="GoTo_GoToHostage"/> -->
          <Transition to="GoToHostage" onEvent="GoTo_GoToHostage"/>
					<Transition to="GameWon" onEvent="GoTo_GameWon"/>
					<!-- <Transition to="Combat" onEvent="OnHostileSeen"/> -->
				</Transitions>
				<BehaviorTree>
					<Sequence>
						<!-- <Signal name="GetMedicLocation" /> -->
            <!-- <ExecuteLua code="AI.QueueBubbleMessage(System.GetEntityIdByName('CounterTerrorist1'),'Going to rescue hostage')"/> -->

            <Selector>
              <AssertCondition condition="LocationsInitialized"/>
              <!-- <LuaGate code="return entity:InitHostageLoc()">
                <Signal name="OnHostageInit"/>
              </LuaGate> -->
              <AssertLua code="return entity:InitHostageLoc()"/>
            </Selector>

            <!-- <Wait duration="0.1" variation="0.1"/> -->
            <!-- <ExecuteLua code="entity:CheckHostageRescued()"/>
            <SendTransitionSignal name="GoTo_GoToHostage"/> -->

            <SetAlertness value="0"/>
            <ExecuteLua code="entity.actor:HolsterItem(true)"/>
            <Stance name="Relaxed"/>
            <Animate name="ZZ_AI_idleBreak"/>
            <Halt/>
						<!-- <Move to="Target" speed="Run" stance="Stand" avoidDangers="0" stopWithinDistance="2.5"/> -->
          </Sequence>
				</BehaviorTree>
			</State>

			<!--
			=================================================
					GoToHostage
			=================================================
			-->
			<State name="GoToHostage">
				<Transitions>
					<Transition to="GoToMedic" onEvent="OnFindingMedic"/>
					<Transition to="Idle" onEvent="GoTo_Idle"/>
					<Transition to="Combat" onEvent="OnHostileSeen"/>
					<Transition to="GameOver" onEvent="GoToGameOver"/>
          <Transition to="WalkToHostage" onEvent="GoTo_WalkToHostage" />
          <!-- <Transition to="MoveToCover" onEvent="OnMoveToCover"/> -->
          <Transition to="Combat" onEvent="OnBulletRain"/>
          <Transition to="FollowLeader" onEvent="GoTo_FollowLeader" />
          <Transition to="TeamIdle" onEvent="GoTo_TeamIdle" />
				</Transitions>
				<BehaviorTree>
					<!-- <Loop> -->
						<Sequence>
							<!-- <Signal name="GetMedicLocation" /> -->
							<!-- <ExecuteLua code="entity:reduceHostageNumber()"/> -->
							<!-- <ExecuteLua code="entity:GetHostageLocation()" /> -->
							<!-- <Bubble message="In finding state" duration="5.0" balloon="true" log="true" /> -->
							<!-- <ExecuteLua code="AI.SetRefPointPos(System.GetEntityIDByName('DummyPlayer1'), System.GetEntityByName('DummyPlayer1'):GetWorldPos())" /> -->
              <SetAlertness value="1"/>
              <ExecuteLua code="entity:CheckTeamFollowing()"/>
              <ExecuteLua code="entity:FindNearestHostage()"/>
              <Wait duration="0.1" variation="0"/>
              <!-- <Parallel> -->
                <!-- <Loop> -->
                  <!-- <Animate name="AI_SearchLookAround"/> -->
                <!-- </Loop> -->
              <Move to="RefPoint" speed="Run" stance="Stand" avoidDangers="1" stopWithinDistance="15" />
              <!-- </Parallel> -->
              <Wait duration="0.1" variation="0"/>
              <SendTransitionSignal name="GoTo_Idle"/>
							<!-- <Move to="RefPoint" speed="Run" stance="Stand" avoidDangers="0" stopWithinDistance="5" />
							<SendTransitionSignal name="GoTo_Idle"/>
							<ExecuteLua code="AI.QueueBubbleMessage(System.GetEntityIdByName('CounterTerrorist1'),'Going to retrieve hostage')"/> -->
						</Sequence>
					<!-- </Loop> -->
				</BehaviorTree>
			</State>

      <State name="TeamIdle">
        <Transitions>
          <Transition to="FollowLeader" onEvent="GoTo_FollowLeader" />
          <Transition to="Idle" onEvent="GoTo_Idle"/>
          <Transition to="GameWon" onEvent="GoTo_GameWon"/>
          <Transition to="GameOver" onEvent="GoToGameOver"/>
          <Transition to="GoToHostage" onEvent="GoTo_GoToHostage"/>
        </Transitions>
        <BehaviorTree>
          <Loop>
            <Sequence>
              <!-- <ExecuteLua code="entity:CheckHostageRescued()"/> -->
              <ExecuteLua code="entity:CheckTeamFollowing()"/>
              <SetAlertness value="0"/>
              <ExecuteLua code="entity.actor:HolsterItem(true)"/>
              <Stance name="Relaxed"/>
              <Animate name="ZZ_AI_idleBreak"/>
              <!-- <Halt/> -->
            </Sequence>
          </Loop>
        </BehaviorTree>

      </State>

      <State name="FollowLeader">
        <Transitions>
          <Transition to="TeamIdle" onEvent="GoTo_TeamIdle"/>
          <Transition to="Idle" onEvent="GoTo_Idle"/>
          <Transition to="Combat" onEvent="OnHostileSeen"/>
          <Transition to="GameWon" onEvent="GoTo_GameWon"/>
          <Transition to="GameOver" onEvent="GoTo_GameOver"/>
          <Transition to="GoToHostage" onEvent="GoTo_GoToHostage"/>
        </Transitions>
        <BehaviorTree>
          <Loop>
            <Sequence>
              <ExecuteLua code="entity:FindFormationPos()"/>
              <Move to="RefPoint" speed="Walk" stance="Stand" avoidDangers="1" stopWithinDistance="5"/>
            </Sequence>
          </Loop>
        </BehaviorTree>
      </State>

      <State name="WalkToHostage">
        <Transitions>
          <Transition to="GoToMedic" onEvent="OnFindingMedic"/>
          <Transition to="Idle" onEvent="GoTo_Idle" />
          <Transition to="Combat" onEvent="OnHostileSeen" />
          <Transition to="GameOver" onEvent="GoToGameOver" />
          <!-- <Transition to="MoveToCover" onEvent="OnMoveToCover"/> -->
        </Transitions>

        <BehaviorTree>
          <Sequence>
            <Move to="RefPoint" speed="Walk" stance="Alerted" avoidDangers="1" stopWithinDistance="2" />
            <Animate name="AI_SearchLookAround"/>
            <Signal name="ReleaseHostage" />
            <SendTransitionSignal name="GoTo_Idle" />
          </Sequence>
        </BehaviorTree>
      </State>
			<!--
			=================================================
					Combat
			=================================================
			-->
			<State name="Combat">
				<Transitions>
					<!-- <Transition to="Idle" onEvent="GoTo_Idle"/> -->
					<Transition to="GoToHostage" onEvent="GoTo_GoToHostage"/>
          <Transition to="FollowLeader" onEvent="GoTo_FollowLeader"/>
					<Transition to="GameOver" onEvent="GoToGameOver"/>
				</Transitions>
				<BehaviorTree>
					<Sequence>
            <!-- <Parallel>
              <Loop> -->
                <!-- <ExecuteLua code="AI.QueueBubbleMessage(System.GetEntityIdByName('CounterTerrorist1'),'Omg!!! Enemy spotted')"/> -->
              <!-- </Loop> -->
              <!-- <Sequence> -->
    						<Log message="Now I should fight you!"/>
    						<SetAlertness value="2"/>
    						<Stance name="Alerted"/>
    						<ExecuteLua code="entity:SelectPrimaryWeapon()"/>
                <Signal name="EnteredCombat"/>
    						<Communicate name="TargetSpottedWhileSearching" channel="Reaction" expirity="1.0" waitUntilFinished="0" />
    						<!-- main combat loop -->
    						<Loop _startLog="main combat loop">
    							<!-- <Parallel successMode="any" failureMode="any"> -->
    								<Sequence>
                      <ExecuteLua code="entity:CheckAIHealth()" />
                      <Parallel>
                        <!-- <Loop>
                        </Loop> -->
                        <Selector>
      <!--
  											=================================================
  													cover combat
  											=================================================
      											-->
                          <Sequence>
                              <Selector>
                                  <AssertLua code="return (AI.IsInCover(entity.id) and not AI.IsCoverCompromised(entity.id)) "/>
                                  <Sequence>
                                      <Log message="trying to find cover"/>
                                      <QueryTPS name="SDKGrunt_CoverToShootFrom" register="Cover"/>
                                      <Log message="moving to found cover"/>
                                      <!-- move to cover; while doing so, start shooting after a small random time of 1-2seconds -->
                                      <Parallel successMode="any">
                                          <Move to="Cover" speed="Run" stance="Alerted" fireMode="Off" avoidDangers="1"/>
                                          <Sequence>
                                              <!-- wait between 1 and 2 seconds before shooting -->
                                              <SuppressFailure>
                                                  <IfTime since="EnteredCombat" isLessThan="2.0">
                                                      <Sequence>
                                                          <WaitUntilTime since="EnteredCombat" isMoreThan="1.0"/>
                                                          <Wait duration="0.0" variation="1.0"/>
                                                      </Sequence>
                                                  </IfTime>
                                              </SuppressFailure>
                                              <Shoot at="Target" fireMode="Burst" stance="Alerted" duration="999"/>
                                              <ExecuteLua code="entity:CheckToNade()"/>
                                          </Sequence>
                                      </Parallel>
                                  </Sequence>
                              </Selector>
                              <Log message="+++ shooting from cover BEGIN +++"/>
                              <ShootFromCover duration="2.0" fireMode="Burst" aimObstructedTimeout="1.0"/>
                              <Log message="--- shooting from cover END ---"/>
                              <AdjustCoverStance duration="3.0" />
                          </Sequence>
                          <!--
                      											=================================================
                      													open combat
                      											=================================================
                      											-->
                          <Sequence>
                              <Log message="open combat"/>
                              <SuppressFailure>
                                  <Sequence>
                                      <QueryTPS name="SDKGrunt_OpenCombat" register="RefPoint"/>
                                      <!-- move to the queried combat position; while doing so, start shooting after a small random time of 1-2seconds -->
                                      <Parallel successMode="any">
                                          <Move to="RefPoint" speed="Run" stance="Alerted" fireMode="Off"/>
                                          <Sequence>
                                              <!-- wait between 1 and 2 seconds before shooting -->
                                              <SuppressFailure>
                                                  <IfTime since="EnteredCombat" isLessThan="2.0">
                                                      <Sequence>
                                                          <WaitUntilTime since="EnteredCombat" isMoreThan="1.0"/>
                                                          <Wait duration="0.0" variation="1.0"/>
                                                      </Sequence>
                                                  </IfTime>
                                              </SuppressFailure>
                                              <Shoot at="Target" fireMode="Burst" stance="Alerted" duration="999"/>
                                          </Sequence>
                                      </Parallel>
                                  </Sequence>
                              </SuppressFailure>
                              <Shoot at="Target" fireMode="Burst" stance="Stand" duration="2.0" _startLog="starting to shoot"/>
                          </Sequence>
                      </Selector>
                      <!-- <Loop> -->
                      <ExecuteLua code="entity:FindIfEnemyDead()"/>
                      <!-- </Loop> -->
                    </Parallel>
    									<!-- <SuppressFailure>
    										<Move to="Target" speed="Run" stance="Stand" avoidDangers="0" stopWithinDistance="10"/>
    									</SuppressFailure>
    									<Shoot at="Target" fireMode="Burst" stance="Stand" duration="2.0" _startLog="starting to shoot"/>
    									<Selector>
    										<AssertCondition condition="HasTarget"/>
    										<SendTransitionSignal name="GoTo_GoToHostage"/>
    									</Selector> -->
    								</Sequence>
    							<!-- </Parallel> -->
    						</Loop>
              <!-- </Sequence>
            </Parallel> -->
					</Sequence>
				</BehaviorTree>
			</State>

			<!--
			=================================================
					GoToMedic
			=================================================
			-->
			<State name="GoToMedic">
				<Transitions>
					<Transition to="Idle" onEvent="GoTo_Idle"/>
          <Transition to="GoToHostage" onEvent="GoTo_GoToHostage"/>
				</Transitions>
				<BehaviorTree>
					<Sequence>
            <ExecuteLua code="entity:FindNearestMedic()"/>
						<!-- <Bubble message="I am low on health! Need to find a medic" duration="5.0" balloon="true" log="true" /> -->
						<Move to="RefPoint" speed="Run" stance="Stand" avoidDangers="0" stopWithinDistance="2.5" />
            <Loop>
              <ExecuteLua code="entity:CheckWithMedic()"/>
            </Loop>
						<!-- <SendTransitionSignal name="GoTo_GoToHostage"/> -->
					</Sequence>
				</BehaviorTree>
			</State>

			<!--
			=================================================
					GameWon
			=================================================
			-->
			<State name="GameWon">
				<BehaviorTree>
					<Sequence>
            <Signal name="ExecuteTest"/>
            <ExecuteLua code="entity:Savefile()"/>
						<Bubble message="Yes! Game Won" duration="5.0" balloon="true" log="true" />
						<SetAlertness value="0"/>
						<ExecuteLua code="entity.actor:HolsterItem(true)"/>
						<Stance name="Relaxed"/>
						<Animate name="ZZ_AI_idleBreak"/>
						<Halt/>
					</Sequence>
				</BehaviorTree>
			</State>

			<!--
			=================================================
					GameOver
			=================================================
			-->
			<State name="GameOver">
				<BehaviorTree>
					<Sequence>
            <Signal name="Savefile"/>
            <!-- <ExecuteLua code="entity:Savefile()"/> -->
						<Bubble message="No! Game Lost" duration="5.0" balloon="true" log="true" />
						<SetAlertness value="0"/>
						<ExecuteLua code="entity.actor:HolsterItem(false)"/>
						<Stance name="Relaxed"/>
						<Animate name="ZZ_AI_idleBreak"/>
						<Halt/>
					</Sequence>
				</BehaviorTree>
			</State>

		</StateMachine>
	</Root>
</BehaviorTree>
